#!/bin/bash
#
# kernel updater
# (dirtyepic@gentoo.org)
#
# https://github.com/dirtyepic/scripts/blob/master/kernelupdate

. /etc/init.d/functions.sh

if [[ ${EUID} != 0 ]]; then
	eerror "Must be run as root"
	exit 1
fi

print_usage() {
	echo "Usage: $0 [-cdjmsv] <kernel directory name>"
	echo "    -c:  make clean"
	echo "    -d:  preserve current default in grub.conf"
	echo "    -j:  jobs (default: 16)"
	echo "    -m:  make menuconfig instead of oldconfig"
	echo "    -s:  symlink and copy .config only"
	echo "    -v:  verbose make"
	exit 1
}

while getopts "cdhj:msv" opt; do
	case ${opt} in
		c)	MAKECLEAN=true
			;;
		d)	DEFAULT=false
			;;
		h)	print_usage
			;;
		j)	JOBS=${OPTARG}
			;;
		m)	MENUCONF=true
			;;
		s)	SYMONLY=true
			;;
		v)	VERBOSE="V=1"
			;;
		?)	print_usage
			;;
	esac
done

shift $(( ${OPTIND} - 1 ))

[[ -z ${1} ]] && print_usage

if [[ ! -d /usr/src/${1} ]]; then
	eerror "No such directory (/usr/src/${1})"
	exit 1
fi

kdir=${1/%\//}
kname=${kdir/linux-/}

if [[ -e /usr/src/linux ]]; then
	if [[ ! -L /usr/src/linux ]]; then
		eerror "Unable to remove /usr/src/linux - not a symlink"
		exit 1
	fi
	einfo "Removing /usr/src/linux symlink"
	rm /usr/src/linux
fi

einfo "Symlinking ${kdir} to /usr/src/linux"
ln -s /usr/src/"${kdir}" /usr/src/linux
[[ $? != 0 ]] && exit 1

cd /usr/src/linux
[[ $? != 0 ]] && exit 1

if [[ ! -e /usr/src/linux/.config ]]; then
	ewarn ".config not found, using /proc/config.gz"
	if [[ -e /proc/config.gz ]]; then
		zcat /proc/config.gz > /usr/src/linux/.config
		[[ $? != 0 ]] && exit 1
	else
		eerror "Could not find /proc/config.gz"
		exit 1
	fi
else
	einfo "Found existing .config"
fi

[[ ${MAKECLEAN} == true ]] && make clean

[[ ${SYMONLY} == true ]] && exit 0

if [[ ${MENUCONF} == true ]]; then
	make menuconfig
	[[ $? != 0 ]] && exit 1
else
	make oldconfig
	[[ $? != 0 ]] && exit 1
fi

einfo "Building kernel ${kname} (-j${JOBS:-16})"
make -j${JOBS:-16} ${VERBOSE}
[[ $? != 0 ]] && exit 1

einfo "Building initramfs tools"
make -C /usr/src/linux/usr/ gen_init_cpio
[[ $? != 0 ]] && exit 1

chmod +x /usr/src/linux/usr/gen_init_cpio \
	/usr/src/linux/scripts/gen_initramfs_list.sh

einfo "Installing modules"
make modules_install
[[ $? != 0 ]] && exit 1

einfo "Installing kernel ${kname}"
cp /usr/src/linux/arch/x86/boot/bzImage /boot/kernel-"${kname}"
[[ $? != 0 ]] && exit 1
cp /usr/src/linux/System.map /boot/System.map-"${kname}"
[[ $? != 0 ]] && exit 1
cp /usr/src/linux/.config /boot/config-"${kname}"
[[ $? != 0 ]] && exit 1

einfo "Generating initramfs"
/usr/src/linux/scripts/gen_initramfs_list.sh -o /boot/initrd-"${kname}".cpio.gz \
	/usr/src/initramfs/initramfs_list
[[ $? != 0 ]] && exit 1


if [[ ! $(grep "kernel-${kname}" /boot/grub/grub.conf) ]]; then
	einfo "Installing grub.conf entry for ${kname}"
	i=$(grep "root (hd0,0)" /boot/grub/grub.conf | wc -l)

	cat >> /boot/grub/grub.conf <<-EOF

		title ${kname}
		root (hd0,0)
		kernel /boot/kernel-${kname} root=/dev/sda3
		initrd /boot/initrd-${kname}.cpio.gz
	EOF

	if [[ ${DEFAULT} == false ]]; then
		einfo "Not updating current default"
	else
		einfo "Setting ${kname} as default"
		sed -i -e "s:\(default \).*:\1${i}:" /boot/grub/grub.conf
	fi
else
	einfo "Kernel ${kname} entry already exists in grub.conf"
fi

einfo "Rebuilding modules"
emerge -av1 @module-rebuild

einfo "Finished"
exit 0
